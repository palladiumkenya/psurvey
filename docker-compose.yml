version: '3'

networks:
  psurvey:
  
services:
  database:
    image: postgres:13.1-alpine
    container_name: psurveydb
    restart: unless-stopped
    tty: true
    # ports:
      # - 5433:5432
    environment:
      - POSTGRES_USER=psurvey
      - POSTGRES_PASSWORD=psurvey
      - POSTGRES_DB=psurvey
    volumes:
      - ../scripts/psurvey.sql:/docker-entrypoint-initdb.d/psurvey.sql
    networks:
      - psurvey
  pythonapp:
    build:
      context: .
      dockerfile: python.dockerfile
    container_name: psurvey-app
    restart: unless-stopped
    volumes:
      - .:/project    
    depends_on:
      - database
    ports:
      - 9100:9100
    networks:
      - psurvey
      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9100/"]
    command:
      - /bin/bash
      - -c
      - |
        # wait for Postgres to start
        function postgres_ready(){
        python << END
        import sys
        import psycopg2
        try:
            conn = psycopg2.connect(dbname="psurvey", user="psurvey", password="psurvey", host="psurveydb")
        except psycopg2.OperationalError:
            sys.exit(-1)
        sys.exit(0)
        END
        }

        until postgres_ready; do
          >&2 echo "Postgres is unavailable - sleeping"
          sleep 10
        done
        python manage.py makemigrations --merge
        sleep 10
        python manage.py migrate --noinput
        python manage.py collectstatic --noinput
        sleep 10
        python manage.py runserver 0.0.0.0:9100 --nostatic

  #site: 
   # build:
    #  context: .
     # dockerfile: nginx.dockerfile
    #container_name: psurveyapp-nginx
    #restart: unless-stopped
    #ports:
     # - "9100:443"
    #depends_on:
     # - pythonapp
      #- database
    #networks:
     # - psurvey         
